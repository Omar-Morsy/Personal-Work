In archive libses.a:

ses_adc.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.adc_read.part.0 0000002c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.adc_init 00000046  00000000  00000000  00000060  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.adc_read 0000000e  00000000  00000000  000000a6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.adc_getJoystickDirection 00000044  00000000  00000000  000000b4  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.adc_getTemperature 0000000c  00000000  00000000  000000f8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .comment      00000031  00000000  00000000  00000104  2**0
                  CONTENTS, READONLY

Disassembly of section .text.adc_read.part.0:

00000000 <adc_read.part.0>:
   0:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__SREG__+0x80003d>
   4:	87 70       	andi	r24, 0x07	; 7
   6:	98 2b       	or	r25, r24
   8:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__SREG__+0x80003d>
   c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__SREG__+0x80003b>
  10:	80 64       	ori	r24, 0x40	; 64
  12:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__SREG__+0x80003b>
  16:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__SREG__+0x80003b>
  1a:	86 fd       	sbrc	r24, 6
  1c:	00 c0       	rjmp	.+0      	; 0x1e <adc_read.part.0+0x1e>
  1e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__SREG__+0x800039>
  22:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__SREG__+0x80003a>
  26:	90 e0       	ldi	r25, 0x00	; 0
  28:	92 2b       	or	r25, r18
  2a:	08 95       	ret

Disassembly of section .text.adc_init:

00000000 <adc_init>:
   0:	82 98       	cbi	0x10, 2	; 16
   2:	84 98       	cbi	0x10, 4	; 16
   4:	85 98       	cbi	0x10, 5	; 16
   6:	80 98       	cbi	0x10, 0	; 16
   8:	81 98       	cbi	0x10, 1	; 16
   a:	8a 98       	cbi	0x11, 2	; 17
   c:	8c 98       	cbi	0x11, 4	; 17
   e:	8d 98       	cbi	0x11, 5	; 17
  10:	88 98       	cbi	0x11, 0	; 17
  12:	89 98       	cbi	0x11, 1	; 17
  14:	e4 e6       	ldi	r30, 0x64	; 100
  16:	f0 e0       	ldi	r31, 0x00	; 0
  18:	80 81       	ld	r24, Z
  1a:	8e 7f       	andi	r24, 0xFE	; 254
  1c:	80 83       	st	Z, r24
  1e:	ec e7       	ldi	r30, 0x7C	; 124
  20:	f0 e0       	ldi	r31, 0x00	; 0
  22:	80 81       	ld	r24, Z
  24:	80 6c       	ori	r24, 0xC0	; 192
  26:	80 83       	st	Z, r24
  28:	80 81       	ld	r24, Z
  2a:	8f 7d       	andi	r24, 0xDF	; 223
  2c:	80 83       	st	Z, r24
  2e:	ea e7       	ldi	r30, 0x7A	; 122
  30:	f0 e0       	ldi	r31, 0x00	; 0
  32:	80 81       	ld	r24, Z
  34:	83 60       	ori	r24, 0x03	; 3
  36:	80 83       	st	Z, r24
  38:	80 81       	ld	r24, Z
  3a:	8f 7d       	andi	r24, 0xDF	; 223
  3c:	80 83       	st	Z, r24
  3e:	80 81       	ld	r24, Z
  40:	80 68       	ori	r24, 0x80	; 128
  42:	80 83       	st	Z, r24
  44:	08 95       	ret

Disassembly of section .text.adc_read:

00000000 <adc_read>:
   0:	88 30       	cpi	r24, 0x08	; 8
   2:	00 f4       	brcc	.+0      	; 0x4 <adc_read+0x4>
   4:	0c 94 00 00 	jmp	0	; 0x0 <adc_read>
   8:	8f ef       	ldi	r24, 0xFF	; 255
   a:	9f ef       	ldi	r25, 0xFF	; 255
   c:	08 95       	ret

Disassembly of section .text.adc_getJoystickDirection:

00000000 <adc_getJoystickDirection>:
   0:	85 e0       	ldi	r24, 0x05	; 5
   2:	0e 94 00 00 	call	0	; 0x0 <adc_getJoystickDirection>
   6:	9c 01       	movw	r18, r24
   8:	25 56       	subi	r18, 0x65	; 101
   a:	31 09       	sbc	r19, r1
   c:	28 3c       	cpi	r18, 0xC8	; 200
   e:	31 05       	cpc	r19, r1
  10:	00 f0       	brcs	.+0      	; 0x12 <adc_getJoystickDirection+0x12>
  12:	28 5c       	subi	r18, 0xC8	; 200
  14:	31 09       	sbc	r19, r1
  16:	28 3c       	cpi	r18, 0xC8	; 200
  18:	31 05       	cpc	r19, r1
  1a:	00 f0       	brcs	.+0      	; 0x1c <adc_getJoystickDirection+0x1c>
  1c:	28 5c       	subi	r18, 0xC8	; 200
  1e:	31 09       	sbc	r19, r1
  20:	28 3c       	cpi	r18, 0xC8	; 200
  22:	31 05       	cpc	r19, r1
  24:	00 f0       	brcs	.+0      	; 0x26 <adc_getJoystickDirection+0x26>
  26:	8d 5b       	subi	r24, 0xBD	; 189
  28:	92 40       	sbci	r25, 0x02	; 2
  2a:	88 3c       	cpi	r24, 0xC8	; 200
  2c:	91 05       	cpc	r25, r1
  2e:	00 f0       	brcs	.+0      	; 0x30 <adc_getJoystickDirection+0x30>
  30:	88 ee       	ldi	r24, 0xE8	; 232
  32:	08 95       	ret
  34:	88 ec       	ldi	r24, 0xC8	; 200
  36:	08 95       	ret
  38:	80 e9       	ldi	r24, 0x90	; 144
  3a:	08 95       	ret
  3c:	88 e5       	ldi	r24, 0x58	; 88
  3e:	08 95       	ret
  40:	80 e2       	ldi	r24, 0x20	; 32
  42:	08 95       	ret

Disassembly of section .text.adc_getTemperature:

00000000 <adc_getTemperature>:
   0:	82 e0       	ldi	r24, 0x02	; 2
   2:	0e 94 00 00 	call	0	; 0x0 <adc_getTemperature>
   6:	82 e0       	ldi	r24, 0x02	; 2
   8:	90 e0       	ldi	r25, 0x00	; 0
   a:	08 95       	ret

ses_button.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.button_init 00000026  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.button_isJoystickPressed 0000000e  00000000  00000000  0000005a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.button_isRotaryPressed 0000000e  00000000  00000000  00000068  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.button_setRotaryButtonCallback 0000000e  00000000  00000000  00000076  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.button_setJoystickButtonCallback 0000000e  00000000  00000000  00000084  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.button_checkState 000000ac  00000000  00000000  00000092  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.__vector_9 00000088  00000000  00000000  0000013e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .bss.state.2820 00000005  00000000  00000000  000001c6  2**0
                  ALLOC
 11 .bss.index.2821 00000001  00000000  00000000  000001c6  2**0
                  ALLOC
 12 .bss.debouncedState.2822 00000001  00000000  00000000  000001c6  2**0
                  ALLOC
 13 .comment      00000031  00000000  00000000  000001c6  2**0
                  CONTENTS, READONLY

Disassembly of section .text.button_init:

00000000 <button_init>:
   0:	94 b1       	in	r25, 0x04	; 4
   2:	9f 73       	andi	r25, 0x3F	; 63
   4:	94 b9       	out	0x04, r25	; 4
   6:	95 b1       	in	r25, 0x05	; 5
   8:	90 6c       	ori	r25, 0xC0	; 192
   a:	95 b9       	out	0x05, r25	; 5
   c:	81 11       	cpse	r24, r1
   e:	00 c0       	rjmp	.+0      	; 0x10 <button_init+0x10>
  10:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__SREG__+0x800029>
  14:	81 60       	ori	r24, 0x01	; 1
  16:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__SREG__+0x800029>
  1a:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <__SREG__+0x80002c>
  1e:	80 6c       	ori	r24, 0xC0	; 192
  20:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__SREG__+0x80002c>
  24:	08 95       	ret

Disassembly of section .text.button_isJoystickPressed:

00000000 <button_isJoystickPressed>:
   0:	83 b1       	in	r24, 0x03	; 3
   2:	88 1f       	adc	r24, r24
   4:	88 27       	eor	r24, r24
   6:	88 1f       	adc	r24, r24
   8:	91 e0       	ldi	r25, 0x01	; 1
   a:	89 27       	eor	r24, r25
   c:	08 95       	ret

Disassembly of section .text.button_isRotaryPressed:

00000000 <button_isRotaryPressed>:
   0:	83 b1       	in	r24, 0x03	; 3
   2:	86 fb       	bst	r24, 6
   4:	88 27       	eor	r24, r24
   6:	80 f9       	bld	r24, 0
   8:	91 e0       	ldi	r25, 0x01	; 1
   a:	89 27       	eor	r24, r25
   c:	08 95       	ret

Disassembly of section .text.button_setRotaryButtonCallback:

00000000 <button_setRotaryButtonCallback>:
   0:	00 97       	sbiw	r24, 0x00	; 0
   2:	01 f0       	breq	.+0      	; 0x4 <button_setRotaryButtonCallback+0x4>
   4:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
   8:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
   c:	08 95       	ret

Disassembly of section .text.button_setJoystickButtonCallback:

00000000 <button_setJoystickButtonCallback>:
   0:	00 97       	sbiw	r24, 0x00	; 0
   2:	01 f0       	breq	.+0      	; 0x4 <button_setJoystickButtonCallback+0x4>
   4:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
   8:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
   c:	08 95       	ret

Disassembly of section .text.button_checkState:

00000000 <button_checkState>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	00 91 00 00 	lds	r16, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   c:	10 91 00 00 	lds	r17, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  10:	c1 2f       	mov	r28, r17
  12:	d0 e0       	ldi	r29, 0x00	; 0
  14:	c0 50       	subi	r28, 0x00	; 0
  16:	d0 40       	sbci	r29, 0x00	; 0
  18:	18 82       	st	Y, r1
  1a:	0e 94 00 00 	call	0	; 0x0 <button_checkState>
  1e:	88 23       	and	r24, r24
  20:	01 f0       	breq	.+0      	; 0x22 <button_checkState+0x22>
  22:	81 e0       	ldi	r24, 0x01	; 1
  24:	88 83       	st	Y, r24
  26:	0e 94 00 00 	call	0	; 0x0 <button_checkState>
  2a:	88 23       	and	r24, r24
  2c:	01 f0       	breq	.+0      	; 0x2e <button_checkState+0x2e>
  2e:	88 81       	ld	r24, Y
  30:	82 60       	ori	r24, 0x02	; 2
  32:	88 83       	st	Y, r24
  34:	1f 5f       	subi	r17, 0xFF	; 255
  36:	15 30       	cpi	r17, 0x05	; 5
  38:	01 f0       	breq	.+0      	; 0x3a <button_checkState+0x3a>
  3a:	10 93 00 00 	sts	0x0000, r17	; 0x800000 <__SREG__+0x7fffc1>
  3e:	00 c0       	rjmp	.+0      	; 0x40 <button_checkState+0x40>
  40:	10 92 00 00 	sts	0x0000, r1	; 0x800000 <__SREG__+0x7fffc1>
  44:	e0 e0       	ldi	r30, 0x00	; 0
  46:	f0 e0       	ldi	r31, 0x00	; 0
  48:	8f ef       	ldi	r24, 0xFF	; 255
  4a:	91 91       	ld	r25, Z+
  4c:	89 23       	and	r24, r25
  4e:	90 e0       	ldi	r25, 0x00	; 0
  50:	e0 30       	cpi	r30, 0x00	; 0
  52:	f9 07       	cpc	r31, r25
  54:	01 f4       	brne	.+0      	; 0x56 <button_checkState+0x56>
  56:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  5a:	81 30       	cpi	r24, 0x01	; 1
  5c:	01 f4       	brne	.+0      	; 0x5e <button_checkState+0x5e>
  5e:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  62:	81 11       	cpse	r24, r1
  64:	00 c0       	rjmp	.+0      	; 0x66 <button_checkState+0x66>
  66:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  6a:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  6e:	30 97       	sbiw	r30, 0x00	; 0
  70:	01 f0       	breq	.+0      	; 0x72 <button_checkState+0x72>
  72:	01 30       	cpi	r16, 0x01	; 1
  74:	01 f4       	brne	.+0      	; 0x76 <button_checkState+0x76>
  76:	09 95       	icall
  78:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  7c:	82 30       	cpi	r24, 0x02	; 2
  7e:	01 f4       	brne	.+0      	; 0x80 <button_checkState+0x80>
  80:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  84:	81 11       	cpse	r24, r1
  86:	00 c0       	rjmp	.+0      	; 0x88 <button_checkState+0x88>
  88:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  8c:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  90:	30 97       	sbiw	r30, 0x00	; 0
  92:	01 f0       	breq	.+0      	; 0x94 <button_checkState+0x94>
  94:	02 30       	cpi	r16, 0x02	; 2
  96:	01 f4       	brne	.+0      	; 0x98 <button_checkState+0x98>
  98:	df 91       	pop	r29
  9a:	cf 91       	pop	r28
  9c:	1f 91       	pop	r17
  9e:	0f 91       	pop	r16
  a0:	09 94       	ijmp
  a2:	df 91       	pop	r29
  a4:	cf 91       	pop	r28
  a6:	1f 91       	pop	r17
  a8:	0f 91       	pop	r16
  aa:	08 95       	ret

Disassembly of section .text.__vector_9:

00000000 <__vector_9>:
   0:	1f 92       	push	r1
   2:	0f 92       	push	r0
   4:	0f b6       	in	r0, 0x3f	; 63
   6:	0f 92       	push	r0
   8:	11 24       	eor	r1, r1
   a:	0b b6       	in	r0, 0x3b	; 59
   c:	0f 92       	push	r0
   e:	2f 93       	push	r18
  10:	3f 93       	push	r19
  12:	4f 93       	push	r20
  14:	5f 93       	push	r21
  16:	6f 93       	push	r22
  18:	7f 93       	push	r23
  1a:	8f 93       	push	r24
  1c:	9f 93       	push	r25
  1e:	af 93       	push	r26
  20:	bf 93       	push	r27
  22:	ef 93       	push	r30
  24:	ff 93       	push	r31
  26:	0e 94 00 00 	call	0	; 0x0 <__vector_9>
  2a:	88 23       	and	r24, r24
  2c:	01 f0       	breq	.+0      	; 0x2e <__vector_9+0x2e>
  2e:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <__SREG__+0x80002c>
  32:	87 ff       	sbrs	r24, 7
  34:	00 c0       	rjmp	.+0      	; 0x36 <__vector_9+0x36>
  36:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3a:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3e:	30 97       	sbiw	r30, 0x00	; 0
  40:	01 f0       	breq	.+0      	; 0x42 <__vector_9+0x42>
  42:	09 95       	icall
  44:	0e 94 00 00 	call	0	; 0x0 <__vector_9>
  48:	88 23       	and	r24, r24
  4a:	01 f0       	breq	.+0      	; 0x4c <__vector_9+0x4c>
  4c:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <__SREG__+0x80002c>
  50:	86 ff       	sbrs	r24, 6
  52:	00 c0       	rjmp	.+0      	; 0x54 <__vector_9+0x54>
  54:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  58:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  5c:	30 97       	sbiw	r30, 0x00	; 0
  5e:	01 f0       	breq	.+0      	; 0x60 <__vector_9+0x60>
  60:	09 95       	icall
  62:	ff 91       	pop	r31
  64:	ef 91       	pop	r30
  66:	bf 91       	pop	r27
  68:	af 91       	pop	r26
  6a:	9f 91       	pop	r25
  6c:	8f 91       	pop	r24
  6e:	7f 91       	pop	r23
  70:	6f 91       	pop	r22
  72:	5f 91       	pop	r21
  74:	4f 91       	pop	r20
  76:	3f 91       	pop	r19
  78:	2f 91       	pop	r18
  7a:	0f 90       	pop	r0
  7c:	0b be       	out	0x3b, r0	; 59
  7e:	0f 90       	pop	r0
  80:	0f be       	out	0x3f, r0	; 63
  82:	0f 90       	pop	r0
  84:	1f 90       	pop	r1
  86:	18 95       	reti

ses_led.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.led_redInit 00000004  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.led_redToggle 0000000a  00000000  00000000  00000038  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.led_redOn 00000004  00000000  00000000  00000042  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.led_redOff 00000004  00000000  00000000  00000046  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text.led_yellowInit 00000004  00000000  00000000  0000004a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text.led_yellowToggle 00000008  00000000  00000000  0000004e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text.led_yellowOn 00000004  00000000  00000000  00000056  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .text.led_yellowOff 00000004  00000000  00000000  0000005a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .text.led_greenInit 00000004  00000000  00000000  0000005e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text.led_greenToggle 0000000a  00000000  00000000  00000062  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text.led_greenOn 00000004  00000000  00000000  0000006c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.led_greenOff 00000004  00000000  00000000  00000070  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .comment      00000031  00000000  00000000  00000074  2**0
                  CONTENTS, READONLY

Disassembly of section .text.led_redInit:

00000000 <led_redInit>:
   0:	99 9a       	sbi	0x13, 1	; 19
   2:	08 95       	ret

Disassembly of section .text.led_redToggle:

00000000 <led_redToggle>:
   0:	94 b3       	in	r25, 0x14	; 20
   2:	82 e0       	ldi	r24, 0x02	; 2
   4:	89 27       	eor	r24, r25
   6:	84 bb       	out	0x14, r24	; 20
   8:	08 95       	ret

Disassembly of section .text.led_redOn:

00000000 <led_redOn>:
   0:	a1 98       	cbi	0x14, 1	; 20
   2:	08 95       	ret

Disassembly of section .text.led_redOff:

00000000 <led_redOff>:
   0:	a1 9a       	sbi	0x14, 1	; 20
   2:	08 95       	ret

Disassembly of section .text.led_yellowInit:

00000000 <led_yellowInit>:
   0:	87 9a       	sbi	0x10, 7	; 16
   2:	08 95       	ret

Disassembly of section .text.led_yellowToggle:

00000000 <led_yellowToggle>:
   0:	81 b3       	in	r24, 0x11	; 17
   2:	80 58       	subi	r24, 0x80	; 128
   4:	81 bb       	out	0x11, r24	; 17
   6:	08 95       	ret

Disassembly of section .text.led_yellowOn:

00000000 <led_yellowOn>:
   0:	8f 98       	cbi	0x11, 7	; 17
   2:	08 95       	ret

Disassembly of section .text.led_yellowOff:

00000000 <led_yellowOff>:
   0:	8f 9a       	sbi	0x11, 7	; 17
   2:	08 95       	ret

Disassembly of section .text.led_greenInit:

00000000 <led_greenInit>:
   0:	86 9a       	sbi	0x10, 6	; 16
   2:	08 95       	ret

Disassembly of section .text.led_greenToggle:

00000000 <led_greenToggle>:
   0:	91 b3       	in	r25, 0x11	; 17
   2:	80 e4       	ldi	r24, 0x40	; 64
   4:	89 27       	eor	r24, r25
   6:	81 bb       	out	0x11, r24	; 17
   8:	08 95       	ret

Disassembly of section .text.led_greenOn:

00000000 <led_greenOn>:
   0:	8e 98       	cbi	0x11, 6	; 17
   2:	08 95       	ret

Disassembly of section .text.led_greenOff:

00000000 <led_greenOff>:
   0:	8e 9a       	sbi	0x11, 6	; 17
   2:	08 95       	ret

ses_scheduler.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.scheduler_update 0000003c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.scheduler_init 0000000e  00000000  00000000  00000070  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.scheduler_add 00000054  00000000  00000000  0000007e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.scheduler_remove 00000042  00000000  00000000  000000d2  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.scheduler_run 0000003e  00000000  00000000  00000114  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .bss.taskList 00000002  00000000  00000000  00000152  2**0
                  ALLOC
  9 .comment      00000031  00000000  00000000  00000152  2**0
                  CONTENTS, READONLY

Disassembly of section .text.scheduler_update:

00000000 <scheduler_update>:
   0:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   8:	30 97       	sbiw	r30, 0x00	; 0
   a:	01 f0       	breq	.+0      	; 0xc <scheduler_update+0xc>
   c:	2f b7       	in	r18, 0x3f	; 63
   e:	f8 94       	cli
  10:	84 81       	ldd	r24, Z+4	; 0x04
  12:	95 81       	ldd	r25, Z+5	; 0x05
  14:	01 97       	sbiw	r24, 0x01	; 1
  16:	95 83       	std	Z+5, r25	; 0x05
  18:	84 83       	std	Z+4, r24	; 0x04
  1a:	89 2b       	or	r24, r25
  1c:	01 f4       	brne	.+0      	; 0x1e <scheduler_update+0x1e>
  1e:	80 85       	ldd	r24, Z+8	; 0x08
  20:	81 60       	ori	r24, 0x01	; 1
  22:	80 87       	std	Z+8, r24	; 0x08
  24:	86 81       	ldd	r24, Z+6	; 0x06
  26:	97 81       	ldd	r25, Z+7	; 0x07
  28:	00 97       	sbiw	r24, 0x00	; 0
  2a:	01 f0       	breq	.+0      	; 0x2c <scheduler_update+0x2c>
  2c:	95 83       	std	Z+5, r25	; 0x05
  2e:	84 83       	std	Z+4, r24	; 0x04
  30:	01 84       	ldd	r0, Z+9	; 0x09
  32:	f2 85       	ldd	r31, Z+10	; 0x0a
  34:	e0 2d       	mov	r30, r0
  36:	2f bf       	out	0x3f, r18	; 63
  38:	00 c0       	rjmp	.+0      	; 0x3a <scheduler_update+0x3a>
  3a:	08 95       	ret

Disassembly of section .text.scheduler_init:

00000000 <scheduler_init>:
   0:	78 94       	sei
   2:	80 e0       	ldi	r24, 0x00	; 0
   4:	90 e0       	ldi	r25, 0x00	; 0
   6:	0e 94 00 00 	call	0	; 0x0 <scheduler_init>
   a:	0c 94 00 00 	jmp	0	; 0x0 <scheduler_init>

Disassembly of section .text.scheduler_add:

00000000 <scheduler_add>:
   0:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   8:	00 97       	sbiw	r24, 0x00	; 0
   a:	01 f0       	breq	.+0      	; 0xc <scheduler_add+0xc>
   c:	df 01       	movw	r26, r30
   e:	10 97       	sbiw	r26, 0x00	; 0
  10:	01 f0       	breq	.+0      	; 0x12 <scheduler_add+0x12>
  12:	a8 17       	cp	r26, r24
  14:	b9 07       	cpc	r27, r25
  16:	01 f0       	breq	.+0      	; 0x18 <scheduler_add+0x18>
  18:	19 96       	adiw	r26, 0x09	; 9
  1a:	0d 90       	ld	r0, X+
  1c:	bc 91       	ld	r27, X
  1e:	a0 2d       	mov	r26, r0
  20:	00 c0       	rjmp	.+0      	; 0x22 <scheduler_add+0x22>
  22:	30 97       	sbiw	r30, 0x00	; 0
  24:	01 f4       	brne	.+0      	; 0x26 <scheduler_add+0x26>
  26:	2f b7       	in	r18, 0x3f	; 63
  28:	f8 94       	cli
  2a:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  2e:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  32:	00 c0       	rjmp	.+0      	; 0x34 <scheduler_add+0x34>
  34:	21 85       	ldd	r18, Z+9	; 0x09
  36:	32 85       	ldd	r19, Z+10	; 0x0a
  38:	21 15       	cp	r18, r1
  3a:	31 05       	cpc	r19, r1
  3c:	01 f0       	breq	.+0      	; 0x3e <scheduler_add+0x3e>
  3e:	f9 01       	movw	r30, r18
  40:	00 c0       	rjmp	.+0      	; 0x42 <scheduler_add+0x42>
  42:	2f b7       	in	r18, 0x3f	; 63
  44:	f8 94       	cli
  46:	92 87       	std	Z+10, r25	; 0x0a
  48:	81 87       	std	Z+9, r24	; 0x09
  4a:	2f bf       	out	0x3f, r18	; 63
  4c:	81 e0       	ldi	r24, 0x01	; 1
  4e:	08 95       	ret
  50:	80 e0       	ldi	r24, 0x00	; 0
  52:	08 95       	ret

Disassembly of section .text.scheduler_remove:

00000000 <scheduler_remove>:
   0:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   8:	00 97       	sbiw	r24, 0x00	; 0
   a:	01 f0       	breq	.+0      	; 0xc <scheduler_remove+0xc>
   c:	e8 17       	cp	r30, r24
   e:	f9 07       	cpc	r31, r25
  10:	01 f4       	brne	.+0      	; 0x12 <scheduler_remove+0x12>
  12:	81 85       	ldd	r24, Z+9	; 0x09
  14:	92 85       	ldd	r25, Z+10	; 0x0a
  16:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  1a:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  1e:	08 95       	ret
  20:	f9 01       	movw	r30, r18
  22:	30 97       	sbiw	r30, 0x00	; 0
  24:	01 f0       	breq	.+0      	; 0x26 <scheduler_remove+0x26>
  26:	21 85       	ldd	r18, Z+9	; 0x09
  28:	32 85       	ldd	r19, Z+10	; 0x0a
  2a:	82 17       	cp	r24, r18
  2c:	93 07       	cpc	r25, r19
  2e:	01 f4       	brne	.+0      	; 0x30 <scheduler_remove+0x30>
  30:	dc 01       	movw	r26, r24
  32:	19 96       	adiw	r26, 0x09	; 9
  34:	8d 91       	ld	r24, X+
  36:	9c 91       	ld	r25, X
  38:	1a 97       	sbiw	r26, 0x0a	; 10
  3a:	92 87       	std	Z+10, r25	; 0x0a
  3c:	81 87       	std	Z+9, r24	; 0x09
  3e:	08 95       	ret
  40:	08 95       	ret

Disassembly of section .text.scheduler_run:

00000000 <scheduler_run>:
   0:	c0 91 00 00 	lds	r28, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	d0 91 00 00 	lds	r29, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   8:	20 97       	sbiw	r28, 0x00	; 0
   a:	01 f0       	breq	.+0      	; 0xc <scheduler_run+0xc>
   c:	1f b7       	in	r17, 0x3f	; 63
   e:	f8 94       	cli
  10:	88 85       	ldd	r24, Y+8	; 0x08
  12:	80 ff       	sbrs	r24, 0
  14:	00 c0       	rjmp	.+0      	; 0x16 <scheduler_run+0x16>
  16:	e8 81       	ld	r30, Y
  18:	f9 81       	ldd	r31, Y+1	; 0x01
  1a:	8a 81       	ldd	r24, Y+2	; 0x02
  1c:	9b 81       	ldd	r25, Y+3	; 0x03
  1e:	09 95       	icall
  20:	88 85       	ldd	r24, Y+8	; 0x08
  22:	8e 7f       	andi	r24, 0xFE	; 254
  24:	88 87       	std	Y+8, r24	; 0x08
  26:	8e 81       	ldd	r24, Y+6	; 0x06
  28:	9f 81       	ldd	r25, Y+7	; 0x07
  2a:	89 2b       	or	r24, r25
  2c:	01 f4       	brne	.+0      	; 0x2e <scheduler_run+0x2e>
  2e:	ce 01       	movw	r24, r28
  30:	0e 94 00 00 	call	0	; 0x0 <scheduler_run>
  34:	09 84       	ldd	r0, Y+9	; 0x09
  36:	da 85       	ldd	r29, Y+10	; 0x0a
  38:	c0 2d       	mov	r28, r0
  3a:	1f bf       	out	0x3f, r17	; 63
  3c:	00 c0       	rjmp	.+0      	; 0x3e <__SP_H__>

ses_timer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.timer2_setCallback 0000000e  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.timer2_start 0000002c  00000000  00000000  00000042  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.timer2_stop 00000012  00000000  00000000  0000006e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.timer1_setCallback 0000000e  00000000  00000000  00000080  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.timer1_start 00000036  00000000  00000000  0000008e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text.timer1_stop 00000012  00000000  00000000  000000c4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text.__vector_17 0000005a  00000000  00000000  000000d6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.__vector_13 0000005a  00000000  00000000  00000130  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .comment      00000031  00000000  00000000  0000018a  2**0
                  CONTENTS, READONLY

Disassembly of section .text.timer2_setCallback:

00000000 <timer2_setCallback>:
   0:	00 97       	sbiw	r24, 0x00	; 0
   2:	01 f0       	breq	.+0      	; 0x4 <timer2_setCallback+0x4>
   4:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
   8:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
   c:	08 95       	ret

Disassembly of section .text.timer2_start:

00000000 <timer2_start>:
   0:	e0 eb       	ldi	r30, 0xB0	; 176
   2:	f0 e0       	ldi	r31, 0x00	; 0
   4:	80 81       	ld	r24, Z
   6:	82 60       	ori	r24, 0x02	; 2
   8:	80 83       	st	Z, r24
   a:	8a ef       	ldi	r24, 0xFA	; 250
   c:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__SREG__+0x800074>
  10:	e1 eb       	ldi	r30, 0xB1	; 177
  12:	f0 e0       	ldi	r31, 0x00	; 0
  14:	80 81       	ld	r24, Z
  16:	84 60       	ori	r24, 0x04	; 4
  18:	80 83       	st	Z, r24
  1a:	e0 e7       	ldi	r30, 0x70	; 112
  1c:	f0 e0       	ldi	r31, 0x00	; 0
  1e:	80 81       	ld	r24, Z
  20:	82 60       	ori	r24, 0x02	; 2
  22:	80 83       	st	Z, r24
  24:	b9 9a       	sbi	0x17, 1	; 23
  26:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__SREG__+0x800073>
  2a:	08 95       	ret

Disassembly of section .text.timer2_stop:

00000000 <timer2_stop>:
   0:	e1 eb       	ldi	r30, 0xB1	; 177
   2:	f0 e0       	ldi	r31, 0x00	; 0
   4:	80 81       	ld	r24, Z
   6:	8e 7f       	andi	r24, 0xFE	; 254
   8:	80 83       	st	Z, r24
   a:	80 81       	ld	r24, Z
   c:	8d 7f       	andi	r24, 0xFD	; 253
   e:	80 83       	st	Z, r24
  10:	08 95       	ret

Disassembly of section .text.timer1_setCallback:

00000000 <timer1_setCallback>:
   0:	00 97       	sbiw	r24, 0x00	; 0
   2:	01 f0       	breq	.+0      	; 0x4 <timer1_setCallback+0x4>
   4:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
   8:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
   c:	08 95       	ret

Disassembly of section .text.timer1_start:

00000000 <timer1_start>:
   0:	e0 e8       	ldi	r30, 0x80	; 128
   2:	f0 e0       	ldi	r31, 0x00	; 0
   4:	80 81       	ld	r24, Z
   6:	84 60       	ori	r24, 0x04	; 4
   8:	80 83       	st	Z, r24
   a:	80 e1       	ldi	r24, 0x10	; 16
   c:	97 e2       	ldi	r25, 0x27	; 39
   e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__SREG__+0x80004a>
  12:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__SREG__+0x800049>
  16:	e1 e8       	ldi	r30, 0x81	; 129
  18:	f0 e0       	ldi	r31, 0x00	; 0
  1a:	80 81       	ld	r24, Z
  1c:	82 60       	ori	r24, 0x02	; 2
  1e:	80 83       	st	Z, r24
  20:	ef e6       	ldi	r30, 0x6F	; 111
  22:	f0 e0       	ldi	r31, 0x00	; 0
  24:	80 81       	ld	r24, Z
  26:	82 60       	ori	r24, 0x02	; 2
  28:	80 83       	st	Z, r24
  2a:	b1 9a       	sbi	0x16, 1	; 22
  2c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__SREG__+0x800046>
  30:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__SREG__+0x800045>
  34:	08 95       	ret

Disassembly of section .text.timer1_stop:

00000000 <timer1_stop>:
   0:	e1 e8       	ldi	r30, 0x81	; 129
   2:	f0 e0       	ldi	r31, 0x00	; 0
   4:	80 81       	ld	r24, Z
   6:	8e 7f       	andi	r24, 0xFE	; 254
   8:	80 83       	st	Z, r24
   a:	80 81       	ld	r24, Z
   c:	8d 7f       	andi	r24, 0xFD	; 253
   e:	80 83       	st	Z, r24
  10:	08 95       	ret

Disassembly of section .text.__vector_17:

00000000 <__vector_17>:
   0:	1f 92       	push	r1
   2:	0f 92       	push	r0
   4:	0f b6       	in	r0, 0x3f	; 63
   6:	0f 92       	push	r0
   8:	11 24       	eor	r1, r1
   a:	0b b6       	in	r0, 0x3b	; 59
   c:	0f 92       	push	r0
   e:	2f 93       	push	r18
  10:	3f 93       	push	r19
  12:	4f 93       	push	r20
  14:	5f 93       	push	r21
  16:	6f 93       	push	r22
  18:	7f 93       	push	r23
  1a:	8f 93       	push	r24
  1c:	9f 93       	push	r25
  1e:	af 93       	push	r26
  20:	bf 93       	push	r27
  22:	ef 93       	push	r30
  24:	ff 93       	push	r31
  26:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2a:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2e:	30 97       	sbiw	r30, 0x00	; 0
  30:	01 f0       	breq	.+0      	; 0x32 <__vector_17+0x32>
  32:	09 95       	icall
  34:	ff 91       	pop	r31
  36:	ef 91       	pop	r30
  38:	bf 91       	pop	r27
  3a:	af 91       	pop	r26
  3c:	9f 91       	pop	r25
  3e:	8f 91       	pop	r24
  40:	7f 91       	pop	r23
  42:	6f 91       	pop	r22
  44:	5f 91       	pop	r21
  46:	4f 91       	pop	r20
  48:	3f 91       	pop	r19
  4a:	2f 91       	pop	r18
  4c:	0f 90       	pop	r0
  4e:	0b be       	out	0x3b, r0	; 59
  50:	0f 90       	pop	r0
  52:	0f be       	out	0x3f, r0	; 63
  54:	0f 90       	pop	r0
  56:	1f 90       	pop	r1
  58:	18 95       	reti

Disassembly of section .text.__vector_13:

00000000 <__vector_13>:
   0:	1f 92       	push	r1
   2:	0f 92       	push	r0
   4:	0f b6       	in	r0, 0x3f	; 63
   6:	0f 92       	push	r0
   8:	11 24       	eor	r1, r1
   a:	0b b6       	in	r0, 0x3b	; 59
   c:	0f 92       	push	r0
   e:	2f 93       	push	r18
  10:	3f 93       	push	r19
  12:	4f 93       	push	r20
  14:	5f 93       	push	r21
  16:	6f 93       	push	r22
  18:	7f 93       	push	r23
  1a:	8f 93       	push	r24
  1c:	9f 93       	push	r25
  1e:	af 93       	push	r26
  20:	bf 93       	push	r27
  22:	ef 93       	push	r30
  24:	ff 93       	push	r31
  26:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2a:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2e:	30 97       	sbiw	r30, 0x00	; 0
  30:	01 f0       	breq	.+0      	; 0x32 <__vector_13+0x32>
  32:	09 95       	icall
  34:	ff 91       	pop	r31
  36:	ef 91       	pop	r30
  38:	bf 91       	pop	r27
  3a:	af 91       	pop	r26
  3c:	9f 91       	pop	r25
  3e:	8f 91       	pop	r24
  40:	7f 91       	pop	r23
  42:	6f 91       	pop	r22
  44:	5f 91       	pop	r21
  46:	4f 91       	pop	r20
  48:	3f 91       	pop	r19
  4a:	2f 91       	pop	r18
  4c:	0f 90       	pop	r0
  4e:	0b be       	out	0x3b, r0	; 59
  50:	0f 90       	pop	r0
  52:	0f be       	out	0x3f, r0	; 63
  54:	0f 90       	pop	r0
  56:	1f 90       	pop	r1
  58:	18 95       	reti
